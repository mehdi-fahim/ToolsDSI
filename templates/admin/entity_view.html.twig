{% extends 'admin/base.html.twig' %}

{% block title %}{{ metadata.entityName }} - Panel Admin{% endblock %}

{% block content %}
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px; flex-wrap: wrap; gap: 15px;">
        <div>
            <h2 style="color: #2d3748; font-size: 1.8rem; margin-bottom: 5px;">üìä {{ metadata.entityName }}</h2>
            <p style="color: #718096;">Table: {{ metadata.tableName }} ‚Ä¢ {{ pagination.total }} enregistrements</p>
        </div>
        <div style="display: flex; gap: 10px; flex-wrap: wrap;">
            <a href="{{ path('admin_dashboard') }}" class="btn btn-secondary">‚Üê Retour</a>
            <button onclick="exportData('csv')" class="btn btn-success">üìÑ Export CSV</button>
            <button onclick="exportData('json')" class="btn btn-success">üìÑ Export JSON</button>
        </div>
    </div>

    <div class="search-container">
        <input type="text" 
               id="searchInput" 
               class="search-input" 
               placeholder="üîç Rechercher dans {{ metadata.entityName }}..." 
               value="{{ search }}"
               autocomplete="off">
        <button onclick="performSearch()" class="btn">Rechercher</button>
        <button onclick="clearSearch()" class="btn btn-secondary">Effacer</button>
    </div>

    <div class="loading" id="loading">
        <p>üîÑ Chargement en cours...</p>
    </div>

    <div class="table-container">
        <table class="admin-table" id="dataTable">
            <thead>
                <tr>
                    {% for column in metadata.columns %}
                        {% if column.name != 'requete' %}
                            <th>{{ column.label }}</th>
                        {% endif %}
                    {% endfor %}
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="tableBody">
                {% for entity in data %}
                    <tr>
                        {% for column in metadata.columns %}
                            {% if column.name != 'requete' %}
                                <td>
                                    {{ entity[column.name] is defined and entity[column.name] is not null ? entity[column.name] : '-' }}
                                </td>
                            {% endif %}
                        {% endfor %}
                        <td>
                            {% if entityName|lower == 'editionbureautique' or entityName|lower == 'edition-bureautique' %}
                                <a href="{{ path('admin_entity_detail', {entityName: entityName, id: entity.NOM_BI}) }}" 
                                   class="btn btn-secondary" 
                                   style="padding: 6px 12px; font-size: 0.8rem; text-decoration: none; display: inline-flex; align-items: center; gap: 4px;">
                                    D√©tail
                                </a>
                            {% elseif entityName|lower == 'utilisateur' or entityName|lower == 'utilisateurs' %}
                                <a href="{{ path('admin_entity_detail', {entityName: entityName, id: entity.CODE_UTILISATEUR}) }}" 
                                   class="btn btn-secondary" 
                                   style="padding: 6px 12px; font-size: 0.8rem; text-decoration: none; display: inline-flex; align-items: center; gap: 4px;">
                                    D√©tail
                                </a>
                            {% else %}
                                <a href="{{ path('admin_entity_detail', {entityName: entityName, id: entity.id}) }}" 
                                   class="btn btn-secondary" 
                                   style="padding: 6px 12px; font-size: 0.8rem; text-decoration: none; display: inline-flex; align-items: center; gap: 4px;">
                                    D√©tail
                                </a>
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    {% if pagination.totalPages > 1 %}
        <div class="pagination">
            {% if pagination.page > 1 %}
                <a href="?page=1{% if search %}&search={{ search }}{% endif %}" class="btn btn-secondary">¬´ Premi√®re</a>
                <a href="?page={{ pagination.page - 1 }}{% if search %}&search={{ search }}{% endif %}" class="btn btn-secondary">‚Äπ Pr√©c√©dente</a>
            {% endif %}

            {% set start = max(1, pagination.page - 2) %}
            {% set end = min(pagination.totalPages, pagination.page + 2) %}

            {% for page in start..end %}
                {% if page == pagination.page %}
                    <span class="current">{{ page }}</span>
                {% else %}
                    <a href="?page={{ page }}{% if search %}&search={{ search }}{% endif %}">{{ page }}</a>
                {% endif %}
            {% endfor %}

            {% if pagination.page < pagination.totalPages %}
                <a href="?page={{ pagination.page + 1 }}{% if search %}&search={{ search }}{% endif %}" class="btn btn-secondary">Suivante ‚Ä∫</a>
                <a href="?page={{ pagination.totalPages }}{% if search %}&search={{ search }}{% endif %}" class="btn btn-secondary">Derni√®re ¬ª</a>
            {% endif %}
        </div>
    {% endif %}

    <div style="margin-top: 20px; text-align: center; color: #718096; font-size: 0.9rem;">
        Affichage de {{ ((pagination.page - 1) * pagination.limit) + 1 }} √† {{ min(pagination.page * pagination.limit, pagination.total) }} 
        sur {{ pagination.total }} enregistrements
    </div>
{% endblock %}

{% block javascript %}
<script>
    let searchTimeout;
    const searchInput = document.getElementById('searchInput');
    const tableBody = document.getElementById('tableBody');
    const loading = document.getElementById('loading');
    const entityName = '{{ entityName }}';

    // Recherche en temps r√©el
    searchInput.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
            performSearch();
        }, 500);
    });

    // Recherche avec Enter
    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            performSearch();
        }
    });

    function performSearch() {
        const searchTerm = searchInput.value.trim();
        toggleLoading(true);

        // Pour EditionBureautique et Utilisateur, utiliser la recherche directe via URL
        if (entityName.toLowerCase() === 'editionbureautique' || entityName.toLowerCase() === 'edition-bureautique' ||
            entityName.toLowerCase() === 'utilisateur' || entityName.toLowerCase() === 'utilisateurs') {
            const url = new URL(window.location.href);
            url.searchParams.set('search', searchTerm);
            url.searchParams.set('page', '1');
            window.location.href = url.toString();
            return;
        }

        // Pour les autres entit√©s, utiliser la route AJAX de recherche
        const url = new URL(`/admin/entity/${entityName}/search`, window.location.origin);
        url.searchParams.set('q', searchTerm);
        url.searchParams.set('page', '1');

        makeRequest(url.toString())
            .then(data => {
                updateTable(data.data);
                updatePagination(data.pagination, searchTerm);
                toggleLoading(false);
            })
            .catch(error => {
                console.error('Erreur lors de la recherche:', error);
                toggleLoading(false);
            });
    }

    function clearSearch() {
        searchInput.value = '';
        window.location.href = '{{ path('admin_entity_view', {entityName: entityName}) }}';
    }

    function updateTable(data) {
        tableBody.innerHTML = '';
        
        if (data.length === 0) {
            tableBody.innerHTML = `
                <tr>
                    <td colspan="{{ metadata.columns|length }}" style="text-align: center; padding: 40px; color: #718096;">
                        Aucun r√©sultat trouv√©
                    </td>
                </tr>
            `;
            return;
        }

        data.forEach(row => {
            const tr = document.createElement('tr');
            {% for column in metadata.columns %}
                {% if column.name != 'requete' %}
                    const td_{{ loop.index }} = document.createElement('td');
                    td_{{ loop.index }}.textContent = row['{{ column.name }}'] || '-';
                    tr.appendChild(td_{{ loop.index }});
                {% endif %}
            {% endfor %}
            // Ajouter la colonne Actions
            const actionTd = document.createElement('td');
            actionTd.innerHTML = `<a href="/admin/entity/${entityName}/detail/${row.id}" class="btn btn-secondary" style="padding: 6px 12px; font-size: 0.8rem;">üëÅÔ∏è D√©tail</a>`;
            tr.appendChild(actionTd);
            tableBody.appendChild(tr);
        });
    }

    function updatePagination(pagination, searchTerm) {
        const paginationContainer = document.querySelector('.pagination');
        if (!paginationContainer) return;

        if (pagination.totalPages <= 1) {
            paginationContainer.style.display = 'none';
            return;
        }

        paginationContainer.style.display = 'flex';
        let paginationHtml = '';

        if (pagination.page > 1) {
            paginationHtml += `<a href="?page=1${searchTerm ? '&search=' + searchTerm : ''}" class="btn btn-secondary">¬´ Premi√®re</a>`;
            paginationHtml += `<a href="?page=${pagination.page - 1}${searchTerm ? '&search=' + searchTerm : ''}" class="btn btn-secondary">‚Äπ Pr√©c√©dente</a>`;
        }

        const start = Math.max(1, pagination.page - 2);
        const end = Math.min(pagination.totalPages, pagination.page + 2);

        for (let page = start; page <= end; page++) {
            if (page === pagination.page) {
                paginationHtml += `<span class="current">${page}</span>`;
            } else {
                paginationHtml += `<a href="?page=${page}${searchTerm ? '&search=' + searchTerm : ''}">${page}</a>`;
            }
        }

        if (pagination.page < pagination.totalPages) {
            paginationHtml += `<a href="?page=${pagination.page + 1}${searchTerm ? '&search=' + searchTerm : ''}" class="btn btn-secondary">Suivante ‚Ä∫</a>`;
            paginationHtml += `<a href="?page=${pagination.totalPages}${searchTerm ? '&search=' + searchTerm : ''}" class="btn btn-secondary">Derni√®re ¬ª</a>`;
        }

        paginationContainer.innerHTML = paginationHtml;
    }

    function exportData(format) {
        const searchTerm = searchInput.value.trim();
        const baseUrl = window.location.origin + '/admin/entity/' + entityName + '/export/' + format;
        const url = new URL(baseUrl);
        
        if (searchTerm) {
            url.searchParams.set('search', searchTerm);
        }

        window.location.href = url.toString();
    }
</script>
{% endblock %} 